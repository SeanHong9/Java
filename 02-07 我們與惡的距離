7. 我們與惡的距離
(1) 說明
(1) 有一個字串, 其中只有"我"和"惡"2種內容, 長度最多100個字, 至少1個字.

(2) 找出字串中, 每個字與"惡"的最近距離.
    註: [2-1] 如果是"惡", 它的距離是0; 它旁邊的鄰居("我")是1, 接著("我")是2, 依此類推.
        [2-2] 一個字串可能有多個"惡", 並且至少有一個"惡".
        [2-3] 請以list或其他可識別的型態, 表示字串中每個字與惡的距離.
 
        例如:  '我惡我我我惡'
          ==>  [1, 0, 1, 2, 1, 0]
(2) 測試
(1) "我我我我我我我我我我我我我我我我我我我惡"
    ==> [19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

(2) "惡我我我我我我我我我我我我我我我我"
    ==> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
    
(3) "我惡我我我惡"
    ==> [1, 0, 1, 2, 1, 0]
    
(4) "我我我惡我我我我我我惡我我我我我我惡我我我我"
    ==> [3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 1, 2, 3, 4]
    
(5) "惡我我我我我我我惡我我我我我我我我惡我我我我我我我惡"
    ==> [0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1, 0]
--------------------------------------------------------------

public class Q3{

     public static void main(String []args){
        
	String Ques = "我惡我我惡我";
	String re = new StringBuffer(Ques).reverse().toString();
	int len = Ques.length()-1; 
	int[] ArrayAns=new int[len+1];
	int[] reverse=new int[len+1];
	   
	    for(int i=0;i<=len;i++) {
	    	ArrayAns[i]=Ques.substring(i).indexOf("惡");
	    	if(ArrayAns[i]==-1) {
	    		ArrayAns[i]=100;
	    	}
	    }
	    for(int i=0;i<=len;i++) {
	    	reverse[i]=re.substring(i).indexOf("惡");
	    }
	    for(int i=0;i<=len;i++) {
	    	if (reverse[len-i]<ArrayAns[i]) { 
	    		if (reverse[len-i]!=-1) {
		    		ArrayAns[i]=reverse[len-i];
	    		}
	    	}
	    }    
	    for(int k=0;k<=len;k++) {
	    	System.out.print(ArrayAns[k]);
	    }
     }
}
